<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="DBNU_Saiyan_Battle_Bars"
   author="Braska"
   id="6e3fc654ff71145bb0cdd2b2"
   language="Lua"
   purpose="Shows stats in InfoBars"
   date_written="2020-04-25"
   requires="4.40"
   version="1.0"
   save_state="y"
   >
<description trim="y">
<![CDATA[
Install this plugin to show an info bar with HP, Energy, 
Rage, Armour, Powerlevel,
and Combat info at the bottom of the screen

prompt must be set to: prompt current_hp [%h] hp_pct [%c] current_energy [%m] energy_pct [%B]%larmour [%z] base_pl [%x] current_pl [%P] rage [%o] gained [%U] zeni [%g]%l

fprompt must be set to: fprompt current_hp [%h] hp_pct [%c] current_energy [%m] energy_pct [%B]%larmour [%z] base_pl [%x] current_pl [%P] rage [%o] gained [%U] zeni [%g]%lfocus [%f] timer [%v] mob_name [%y] mob_hp_pct [%Y]%l
]]>
</description>

</plugin>

<!--  Triggers  -->

<triggers>

<!-- 

prompt must be set to: prompt current_hp [%h] hp_pct [%c] current_energy [%m] energy_pct [%B]%larmour [%z] base_pl [%x] current_pl [%P] rage [%o] gained [%U] zeni [%g]%l

fprompt must be set to: fprompt current_hp [%h] hp_pct [%c] current_energy [%m] energy_pct [%B]%larmour [%z] base_pl [%x] current_pl [%P] rage [%o] gained [%U] zeni [%g]%lfocus [%f] timer [%v] mob_name [%y] mob_hp_pct [%Y]%l

-->
   
  <trigger
   enabled="y"
   match="current_hp \[(.*?)\] hp_pct \[(.*?)\%\] current_energy \[(.*?)\] energy_pct \[(.*?)\%\]$"
   regexp="y"
   omit_from_output="y"
   script="info_bars"
   sequence="100"
  >
  </trigger>

  <trigger
   enabled="y"
   match="armour \[(.*?)\] base_pl \[(.*?)\] current_pl \[(.*?)\] rage \[(.*?)\] gained \[(.*?)\] zeni \[(.*?)\]$"
   regexp="y"
   omit_from_output="y"
   script="info_bars2"
   sequence="100"
  >
  </trigger>

  <trigger
   enabled="y"
   match="focus \[(.*?)\] timer \[(.*?)\] mob_name \[(.*?)\:(.*?)\] mob_hp_pct \[(.*?)\%\]$"
   regexp="y"
   omit_from_output="y"
   script="info_bars3"
   sequence="100"
  >
  </trigger>

    <trigger
   enabled="y"
   match="PL Gained This Fight - (.*?)$"
   omit_from_output="y"
   regexp="y"
   script="pl_gained"
   sequence="100"
  >
  </trigger>

</triggers>

<!--  Script  -->

<script>

function info_bars (name, line, wildcards)

  local hp = wildcards [1]
  local hp_pct = tonumber ((string.gsub(wildcards [2], ",", "")))
  local current_energy = wildcards [3]
  local energy_pct = tonumber ((string.gsub(wildcards [4], ",", "")))

require "InfoBox"

sty = InfoBox.barStyles
HPBox = InfoBox:New("HP/SP") HPBox:Font("Consolas", 10)
 HPBox.Bar.textStyle = HPBox.textStyles.plain
 HPBox.Bar.barStyle = sty.glass + sty.gradientFixed 
HPBar    = HPBox:AddBar("", 0, "green", "firebrick", false, sty.glass + sty.gradientFixed)
 local hpCaptionFmt = "@WHealth: %s"
 HPBar.fade = true ; HPBar.threshold = 25
 HPBar:WatchValue ("vars.pHP") 
SPBar    = HPBox:AddBar("", 0, "dodgerblue", "purple", false, sty.glass + sty.gradientFixed)
 local spCaptionFmt = "@WEnergy: %s"
 SPBar.fade = true ; SPBar.threshold = 25
 SPBar:WatchValue("vars.pSP")
HPBox:WindowPosition ( InfoBox.windowPositions.S )
HPBox:Columns(1)

--Following values are normally set by other triggers.
vars = {pHP = hp_pct, pSP = energy_pct}
HPBar.caption = hpCaptionFmt:format(hp)
SPBar.caption = spCaptionFmt:format(current_energy)
HPBox:Update()

end

function info_bars2 (name, line, wildcards)

  local armor = wildcards [1]
  local base_pl = wildcards [2]
  local current_pl = wildcards [3]
  local rage = wildcards [4]
  local rage_pct = tonumber ((string.gsub(wildcards [4], ",", ""))) / 10
  local lgained = wildcards [5]
  local zeni = wildcards [6]

require "InfoBox"

PLBox = InfoBox:New("Powerlevel") PLBox:Font("Consolas", 10)
 PLBox.Bar.textStyle = PLBox.textStyles.plain
RGBar    = PLBox:AddBar("", 0, "orange", "firebrick", false)
 local rgCaptionFmt = "@WRage: %s"
 RGBar:WatchValue ("vars.pRG")
CPLBar    = PLBox:AddBar("")
 local cplCaptionFmt = "@WBase PL: %s"
ABar    = PLBox:AddBar("")
 local aCaptionFmt = "@WArmor: %s"
MPLBar	= PLBox:AddBar("")
 local mplCaptionFmt = "@WMax PL: @Y%s"
MGBar	= PLBox:AddBar("")
 local mgCaptionFmt = "@WPL Gained: %s"
ZBar    = PLBox:AddBar("")
 local zCaptionFmt = "@WZeni: %s"
PLBox:WindowPosition ( InfoBox.windowPositions.S )
PLBox:Columns(3)

-- Following values are normally set by other triggers.
vars = {pRG = rage_pct}
CPLBar.caption = cplCaptionFmt:format(base_pl)
MPLBar.caption = mplCaptionFmt:format(current_pl)
ABar.caption = aCaptionFmt:format(armor)
RGBar.caption = rgCaptionFmt:format(rage)
MGBar.caption = mgCaptionFmt:format(lgained)
ZBar.caption = zCaptionFmt:format(zeni)
PLBox:Update()

end

 function info_bars3 (name, line, wildcards)

   local focus = wildcards [1]
   local focus_pct = tonumber ((string.gsub(wildcards [1], ",", "")))
   local timer = wildcards [2]
   local mob_name = wildcards [3]
   local mob_pct = tonumber ((string.gsub(wildcards [5], ",", "")))

require "InfoBox"

sty = InfoBox.barStyles
CTBox = InfoBox:New("Combat") CTBox:Font("Consolas", 10)
 CTBox.Bar.textStyle = CTBox.textStyles.plain
 CTBox.Bar.barStyle = sty.glass + sty.gradientFixed 
MNBar    = CTBox:AddBar("", 0, "green", "firebrick", false, sty.glass + sty.gradientFixed)
 local mnCaptionFmt = "@W%s"
 MNBar.fade = true ; MNBar.threshold = 50
 MNBar:WatchValue ("vars.pMN") 
FBar    = CTBox:AddBar("", 0, "dodgerblue", "purple", false, sty.glass + sty.gradientFixed)
 local fCaptionFmt = "@WFocus: %s"
 FBar.fade = true ; FBar.threshold = 25
 FBar:WatchValue("vars.pF")
TBar    = CTBox:AddBar("")
 local tCaptionFmt = "@WTimer: %s"
CTBox:WindowPosition ( InfoBox.windowPositions.SW )

--Following values are normally set by other triggers.
vars = {pMN = mob_pct, pF = focus_pct}
MNBar.caption = mnCaptionFmt:format(mob_name)
FBar.caption = fCaptionFmt:format(focus)
TBar.caption = tCaptionFmt:format(timer)
CTBox:Update()

end

 function pl_gained (name, line, wildcards)

   local gained = wildcards [1]
   
require "InfoBox"

GBox = InfoBox:New("Misc") GBox:Font("Consolas", 10)
TextBar = GBox:AddBar("Last Combat")
GBar    = GBox:AddBar("")
 local gCaptionFmt = "@WPL last combat: %s"
GBox:WindowPosition ( InfoBox.windowPositions.SE )
GBox:Columns(1)
--Following values are normally set by other triggers.
GBar.caption = gCaptionFmt:format(gained)
GBox:Update()

end

</script>

</muclient>
